# version: '2.1'

services:
  product:
    build: microservices/product-service
    mem_limit: 512m
    ports:
      - "7001:8080"
    environment:
    - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
    depends_on:
     mongodb:
      condition: service_healthy
     kafka:
      condition: service_started

  product-p1:
    build: microservices/product-service
    mem_limit: 512m
    ports:
      - "8001:8080"
    environment:
    - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
    depends_on:
     mongodb:
      condition: service_healthy
     kafka:
      condition: service_started
  
  recommendation:
    build: microservices/recommendation-service
    mem_limit: 512m
    ports:
      - "7002:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
    depends_on:
     mongodb:
      condition: service_healthy
     kafka:
      condition: service_started

  recommendation-p1:
    build: microservices/recommendation-service
    mem_limit: 512m
    ports:
      - "8002:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
    depends_on:
     mongodb:
      condition: service_healthy
     kafka:
      condition: service_started


  review:
    build: microservices/review-service
    mem_limit: 512m
    ports:
      - "7003:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_0,kafka
    depends_on:
     mysql:
      condition: service_healthy
     kafka:
      condition: service_started

  review-p1:
    build: microservices/review-service
    mem_limit: 512m
    ports:
      - "8003:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker,streaming_partitioned,streaming_instance_1,kafka
    depends_on:
     mysql:
      condition: service_healthy
     kafka:
      condition: service_started


  product-composite:
    build: microservices/product-composite-service
    mem_limit: 512m
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
     kafka:
      condition: service_started
      
  mongodb:
   image: mongo:6.0.4
   mem_limit: 512m
   ports:
    - "27017:27017"
   command: mongod
   healthcheck:
    test: "mongostat -n 1"
    interval: 5s
    timeout: 2s
    retries: 60

  mysql:
   image: mysql:8.0.32
   mem_limit: 512m
   ports:
    - "3306:3306"
   environment:
    - MYSQL_ROOT_PASSWORD=mypwd
    - MYSQL_DATABASE=review_db
    - MYSQL_USER=user
    - MYSQL_PASSWORD=mypwd
   healthcheck:
    test: "/usr/bin/mysql --user=user --password=mypwd --execute \"SHOW DATABASES;\""
    interval: 5s
    timeout: 2s
    retries: 60

  kafka:
   image: confluentinc/cp-kafka:7.3.1
   restart: always
   mem_limit: 1024m
   ports:
    - "9092:9092"
   environment:
    - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
   depends_on:
    - zookeeper
    
  zookeeper:
   image: confluentinc/cp-zookeeper:7.3.1
   restart: always
   mem_limit: 512m
   ports:
    - "2181:2181"
   environment:
    - ZOOKEEPER_CLIENT_PORT=2181
